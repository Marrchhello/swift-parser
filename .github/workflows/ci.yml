name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 3107
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install dependencies
      run: go mod download

    - name: Run unit tests
      run: go test ./... -v
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: 3107
        DB_NAME: postgres

    - name: Build application
      run: go build -v ./...

    - name: Start application
      run: |
        ./swift-parser &
        sleep 10
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: 3107
        DB_NAME: postgres

    - name: Run integration tests
      run: go test ./tests/integration/... -v
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: 3107
        DB_NAME: postgres

  docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t swift-parser .

    - name: Test Docker image
      run: |
        docker-compose up -d
        sleep 10
        curl http://localhost:8080/v1/swift-codes/TESTTR00XXX
        docker-compose down